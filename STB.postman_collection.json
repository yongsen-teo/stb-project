{
	"info": {
		"_postman_id": "3d71c5a7-ad51-4e65-aa21-69ff5f622db6",
		"name": "STB",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38298874"
	},
	"item": [
		{
			"name": "TextSearch (Places API - v2)",
			"item": [
				{
					"name": "Name and Address Details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{PLACES_API_KEY}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Goog-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Goog-FieldMask",
								"value": "{{Name,Address}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"textQuery\": \"Spicy Vegetarian Food in Singapore east side\",\n    \"pageSize\": 1,\n    \"rankPreference\": \"RELEVANCE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://places.googleapis.com/v1/places:searchText",
							"protocol": "https",
							"host": [
								"places",
								"googleapis",
								"com"
							],
							"path": [
								"v1",
								"places:searchText"
							]
						}
					},
					"response": []
				},
				{
					"name": "test for featherblade",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "AIzaSyCzgttisCXST5vCtWhPlPA9gU-ZTGk1HgE",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Goog-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Goog-FieldMask",
								"value": "{{Name,Address}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"textQuery\": \"steak restaurant singapore\",\n    // \"pageSize\": 10,\n    \"rankPreference\": \"RELEVANCE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://places.googleapis.com/v1/places:searchText",
							"protocol": "https",
							"host": [
								"places",
								"googleapis",
								"com"
							],
							"path": [
								"v1",
								"places:searchText"
							]
						}
					},
					"response": []
				},
				{
					"name": "Price Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Price level mapping",
									"const PRICE_LEVEL_MAP = {",
									"    'PRICE_LEVEL_INEXPENSIVE': 1,",
									"    'PRICE_LEVEL_MODERATE': 2,",
									"    'PRICE_LEVEL_UNSPECIFIED': -1",
									"};",
									"",
									"pm.test(\"Process places data\", function() {",
									"    const response = pm.response.json();",
									"    ",
									"    // Get sort preferences from environment",
									"    const sortField = pm.environment.get(\"sortField\") || 'priceLevel';",
									"    const sortOrder = pm.environment.get(\"sortOrder\") || 'asc';",
									"    ",
									"    // Filter and sort",
									"    const processedPlaces = response.places",
									"        // Filter for moderate and below prices",
									"        .filter(place => {",
									"            const priceLevel = PRICE_LEVEL_MAP[place.priceLevel] ?? -1;",
									"            return priceLevel <= PRICE_LEVEL_MAP['PRICE_LEVEL_MODERATE'];",
									"        })",
									"        // Sort by specified field",
									"        .sort((a, b) => {",
									"            let valA, valB;",
									"            ",
									"            // Handle different field types",
									"            if (sortField === 'priceLevel') {",
									"                valA = PRICE_LEVEL_MAP[a[sortField]] ?? -1;",
									"                valB = PRICE_LEVEL_MAP[b[sortField]] ?? -1;",
									"            } else if (sortField === 'displayName') {",
									"                valA = a.displayName?.text ?? '';",
									"                valB = b.displayName?.text ?? '';",
									"                return sortOrder === 'desc' ? ",
									"                    valB.localeCompare(valA) : ",
									"                    valA.localeCompare(valB);",
									"            } else {",
									"                valA = a[sortField] ?? -1;",
									"                valB = b[sortField] ?? -1;",
									"            }",
									"            ",
									"            return sortOrder === 'desc' ? valB - valA : valA - valB;",
									"        });",
									"    ",
									"    // Save results",
									"    pm.environment.set(\"processedResults\", JSON.stringify(processedPlaces));",
									"    ",
									"    // Log first 3 results",
									"    processedPlaces.slice(0, 2).forEach(place => ",
									"        console.log(`${place.displayName.text}: ${place[sortField]}`));",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{PLACES_API_KEY}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Goog-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Goog-FieldMask",
								"value": "places.displayName,places.priceRange,places.priceLevel",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"textQuery\": \"LAVO singapore\",\n    \"pageSize\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://places.googleapis.com/v1/places:searchText",
							"protocol": "https",
							"host": [
								"places",
								"googleapis",
								"com"
							],
							"path": [
								"v1",
								"places:searchText"
							]
						}
					},
					"response": []
				},
				{
					"name": "Business Details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{PLACES_API_KEY}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Goog-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Goog-FieldMask",
								"value": "places.displayName,places.currentOpeningHours.weekdayDescriptions,places.regularOpeningHours.weekdayDescriptions",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"textQuery\" : \"mediterranean buffet\",\n    \"pageSize\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://places.googleapis.com/v1/places:searchText",
							"protocol": "https",
							"host": [
								"places",
								"googleapis",
								"com"
							],
							"path": [
								"v1",
								"places:searchText"
							]
						}
					},
					"response": []
				},
				{
					"name": "Photo info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{PLACES_API_KEY}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Goog-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Goog-FieldMask",
								"value": "places.id,places.displayName,places.photos",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"text_query\": \"paranakan restaurant in sinagpoare\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://places.googleapis.com/v1/places:searchText",
							"protocol": "https",
							"host": [
								"places",
								"googleapis",
								"com"
							],
							"path": [
								"v1",
								"places:searchText"
							]
						}
					},
					"response": []
				},
				{
					"name": "Photo API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "AIzaSyCzgttisCXST5vCtWhPlPA9gU-ZTGk1HgE",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Goog-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Goog-FieldMask",
								"value": "*",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://places.googleapis.com/v1/places/ChIJSWafK5kQ2jERaQ1kiqBGY3c/photos/AWYs27yo1FFqrbulbdSzCPsOBILixaMLENtrk5c6xv0JVmB8xYTa728pQczIzUtnMbsCG0bQDLZaGchEsJMWPNVxy0a1SmXrp-dJOq7GIlnIsNspHYjocCW4iRkIllT02JCDAVXVSqFYyPZSGj1TruH_BiEXdOVshnLfbX6W/media?key=AIzaSyCzgttisCXST5vCtWhPlPA9gU-ZTGk1HgE",
							"protocol": "https",
							"host": [
								"places",
								"googleapis",
								"com"
							],
							"path": [
								"v1",
								"places",
								"ChIJSWafK5kQ2jERaQ1kiqBGY3c",
								"photos",
								"AWYs27yo1FFqrbulbdSzCPsOBILixaMLENtrk5c6xv0JVmB8xYTa728pQczIzUtnMbsCG0bQDLZaGchEsJMWPNVxy0a1SmXrp-dJOq7GIlnIsNspHYjocCW4iRkIllT02JCDAVXVSqFYyPZSGj1TruH_BiEXdOVshnLfbX6W",
								"media"
							],
							"query": [
								{
									"key": "key",
									"value": "AIzaSyCzgttisCXST5vCtWhPlPA9gU-ZTGk1HgE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "docs",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_query\": \"chinese buffet good for kids\",\n    \"page_size\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8000/api/v1/locations/search",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"locations",
								"search"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "App Endpoint",
			"item": [
				{
					"name": "test page_size number",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_query\": \"chinese buffet good for kids\",\n    \"page_size\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8000/api/v1/locations/search",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"locations",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "test user input length",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_query\": \"foo\",\n    \"page_size\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8000/api/v1/locations/search",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"locations",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "test 5 places",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_query\": \"top 5 chinese restaurants good for kids\",\n    \"page_size\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8000/api/v1/locations/search",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"locations",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "test 1 place",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_query\": \"italian cuisine with good pizza\",\n    \"page_size\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8000/api/v1/locations/search",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"locations",
								"search"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "Name,Address",
			"value": "places.id,places.displayName,places.formattedAddress"
		}
	]
}